"TotalUsers": 40,
  "Status_Code": 200,
  "Response_Message": "user GET request successfully",
  "results":


"/update": {
      "produces": ["application/json"],
      "put": {
        "tags": ["Customers"],
        "summary": "Update user by id",
        "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/customers"
              }
            }
          ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "301": {
            "description": "Moved Permanently"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }

  "definitions": {
    "customers": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "Customers": {
      "type": "array",
      "$ref": "#/definitions/customers"
    }
  }



   "/update/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "integer"
                }
            ],
            "put": {
                "summary": "Update user with give ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "body",
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },

         "updateUser": {
            "properties": {
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          }